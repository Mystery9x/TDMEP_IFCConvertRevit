<Window x:Class="LicenseApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LicenseApp"
        mc:Ignorable="d" Title="ライセンスアプリ"
        Name="CheckLicense" Height="230" Width="460"
        WindowStartupLocation="CenterScreen" ResizeMode="NoResize"
        SizeToContent="Height" KeyDown="Window_KeyDown">
    <Window.Resources>
        <!-- Define the NormalButtonStyle style -->
        <Style x:Key="NormalButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#607d8b" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#607d8b" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#78909C" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#78909C" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Define the ComboBoxToggleItem style -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="0"
                    Background="Transparent"
                    BorderBrush="Black"
                    BorderThickness="0 0 0 1" />

                <Path
                    x:Name="Arrow"
                    Grid.Column="1"
                    Fill="Black"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="DarkGray" />
                    <Setter Property="Foreground" Value="DarkGray" />
                    <Setter TargetName="Arrow" Property="Fill" Value="DarkGray" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Define the ComboBoxTextBox style -->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <!-- Define the ComboBox style -->
        <Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxStyle">
            <Setter Property="Foreground" Value="{Binding ForeGroundColor}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="MaxDropDownHeight" Value="300" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                Template="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="3,3,30,3"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left" MaxWidth="300" />
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Stretch"
                                     Margin="3,3,30,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Foreground="Black"
                                     Visibility="Hidden"
                                     TextWrapping="Wrap"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide"
                                Width="Auto">

                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="1"
                                        BorderBrush="Black" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888" />
                                <Setter Property="BorderThickness" Value="0 0 0 1" />
                                <Setter Property="BorderBrush" Value="#888888" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="BorderThickness" Value="0 0 0 1" />
                                <Setter Property="BorderBrush" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false" />
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Define the ComboBoxItem style -->
        <Style TargetType="{x:Type ComboBoxItem}" x:Key="comboBoxItemStyle">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border" Background="White" BorderBrush="Gray" BorderThickness="0,0,0,1">
                            <TextBlock Text="{Binding ParamName}" Padding="5" Foreground="{Binding ForeGroundColor}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="1" VerticalAlignment="Center" Orientation="Horizontal" FlowDirection="RightToLeft">

            <Button Height="30" Width="90" Margin="5" FontSize="12"
                Content="閉じる" IsCancel="True" Style="{StaticResource NormalButtonStyle}"
                Command="{Binding CancelCommand}"
                CommandParameter="{Binding ElementName=CheckLicense}">
            </Button>

            <Button Height="30" Width="90" Margin="5" FontSize="12"
                Content="キー生成" Padding="0" Style="{StaticResource NormalButtonStyle}"
                IsDefault="True"
                Command="{Binding ApplyCommand}"
                CommandParameter="{Binding ElementName=CheckLicense}">
            </Button>
        </StackPanel>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Text="終了日" Margin="5" VerticalAlignment="Center" />
            <Grid Grid.Column="1" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ComboBox ItemsSource="{Binding TimeSet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Height="30" Margin="5" HorizontalAlignment="Stretch" Style="{StaticResource ComboBoxStyle}" />
                <DatePicker Grid.Column="1"  Margin="5" VerticalAlignment="Center" VerticalContentAlignment="Center" Height="30"
                            IsEnabled="{Binding IsSetDateTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            SelectedDate="{Binding EndTime, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>

            <TextBlock Grid.Row="1" Text="IP MAC入力" Margin="5" VerticalAlignment="Center" />
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding IpMac, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Height="30" Margin="5" VerticalContentAlignment="Center" />

            <TextBlock Grid.Row="2" Text="ライセンスキー" Margin="5" VerticalAlignment="Center" />
            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding LicenseKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Height="30" Margin="5" VerticalContentAlignment="Center" IsReadOnly="True" />
            <Button Grid.Row="2" Grid.Column="2" Content="コピー" HorizontalAlignment="Right"
                    Height="30" Width="90" Margin="5" FontSize="12"
                    Command="{Binding CoppyCommand}"
                    Style="{StaticResource NormalButtonStyle}" />
        </Grid>
    </Grid>
</Window>