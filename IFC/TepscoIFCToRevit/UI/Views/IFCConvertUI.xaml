<Window x:Class="TepscoIFCToRevit.UI.Views.IFCConvertUI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TepscoIFCToRevit.UI.Views"
        mc:Ignorable="d"
        xmlns:domain="clr-namespace:TepscoIFCToRevit.UI.ViewModels"
        Name ="IFCConvertDialog"
        Title="{Binding Tille}"
        Height="500" Width="450"
        MinHeight="500"
        MinWidth="450"
        KeyDown="IFCConvertDlg_KeyDown"
        Closed="IFCConvertDlg_Closed"
        FontSize="12"
        WindowStartupLocation="CenterScreen"
        Background="WhiteSmoke">

    <Window.Resources>
        <ResourceDictionary>
            <!-- Colors -->
            <Color x:Key="PrimaryColor">#673AB7</Color>
            <Color x:Key="PrimaryLightColor">#9575CD</Color>
            <Color x:Key="PrimaryDarkColor">#512DA8</Color>
            <Color x:Key="AccentColor">#7E57C2</Color>
            <Color x:Key="TextPrimaryColor">#212121</Color>
            <Color x:Key="TextSecondaryColor">#757575</Color>
            <Color x:Key="DividerColor">#BDBDBD</Color>
            <Color x:Key="BackgroundColor">#F5F5F5</Color>
            <Color x:Key="PurpleLight">#EDE7F6</Color>

            <!-- Brushes -->
            <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}" />
            <SolidColorBrush x:Key="PrimaryLightBrush" Color="{StaticResource PrimaryLightColor}" />
            <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{StaticResource PrimaryDarkColor}" />
            <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />
            <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimaryColor}" />
            <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}" />
            <SolidColorBrush x:Key="DividerBrush" Color="{StaticResource DividerColor}" />
            <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
            <SolidColorBrush x:Key="PurpleLightBrush" Color="{StaticResource PurpleLight}" />

            <!-- Define the ModernButtonStyle style -->
            <Style x:Key="ModernButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="16,10" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="{TemplateBinding Padding}" />
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="1"
                                                      BlurRadius="4"
                                                      Opacity="0.2"
                                                      Color="#000000" />
                                </Border.Effect>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{StaticResource DividerBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define the ModernDataGrid style -->
            <Style x:Key="ModernDataGridStyle" TargetType="DataGrid">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource DividerBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="RowBackground" Value="White" />
                <Setter Property="AlternatingRowBackground" Value="#F3E5F5" />
                <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DividerBrush}" />
                <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DividerBrush}" />
                <Setter Property="RowHeaderWidth" Value="0" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="ColumnHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                            <Setter Property="Padding" Value="12,10" />
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkBrush}" />
                            <Setter Property="BorderThickness" Value="0 0 1 0" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="8,4" />
                            <Setter Property="Height" Value="36" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Padding="{TemplateBinding Padding}">
                                            <ContentPresenter VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#D1C4E9" />
                                    <Setter Property="Foreground" Value="{StaticResource PrimaryDarkBrush}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryLightBrush}" />
                                    <Setter Property="BorderThickness" Value="0" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#EDE7F6" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsGrouping" Value="True">
                        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Define the ModernComboBoxToggleItem style -->
            <ControlTemplate x:Key="ModernComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="Border"
                            Grid.ColumnSpan="2"
                            CornerRadius="4"
                            Background="White"
                            BorderBrush="{StaticResource DividerBrush}"
                            BorderThickness="1" />

                    <Path x:Name="Arrow"
                          Grid.Column="1"
                          Fill="{StaticResource TextSecondaryBrush}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M0,0 L10,0 L5,5 z" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource PrimaryBrush}" />
                        <Setter TargetName="Arrow" Property="Data" Value="M0,5 L10,5 L5,0 z" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DividerBrush}" />
                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DividerBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- Define the ModernComboBoxTextBox style -->
            <ControlTemplate x:Key="ModernComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost"
                        Focusable="False"
                        Background="{TemplateBinding Background}"
                        Padding="8,0,0,0" />
            </ControlTemplate>

            <!-- Define the ModernComboBox style -->
            <Style TargetType="{x:Type ComboBox}" x:Key="ModernComboBoxStyle">
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="Background" Value="White" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{StaticResource DividerBrush}" />
                <Setter Property="Padding" Value="8,6" />
                <Setter Property="Margin" Value="0,4" />
                <Setter Property="Height" Value="38" />
                <Setter Property="MinWidth" Value="120" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="MaxDropDownHeight" Value="300" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton Name="ToggleButton"
                                              Template="{StaticResource ModernComboBoxToggleButton}"
                                              Grid.Column="2"
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press">
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite"
                                                  IsHitTestVisible="False"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="8,0,30,0"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left" />
                                <TextBox x:Name="PART_EditableTextBox"
                                         Style="{x:Null}"
                                         Template="{StaticResource ModernComboBoxTextBox}"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Center"
                                         Margin="8,0,30,0"
                                         Focusable="True"
                                         Background="Transparent"
                                         Foreground="{StaticResource TextPrimaryBrush}"
                                         Visibility="Hidden"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" />
                                <Popup Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Slide">
                                    <Grid Name="DropDown"
                                          SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                                Background="White"
                                                BorderThickness="1"
                                                BorderBrush="{StaticResource PrimaryBrush}">
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="2"
                                                                  BlurRadius="5"
                                                                  Opacity="0.2"
                                                                  Color="#000000" />
                                            </Border.Effect>
                                        </Border>
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                </Trigger>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter Property="IsTabStop" Value="False" />
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Define the ModernComboBoxItem style -->
            <Style TargetType="{x:Type ComboBoxItem}" x:Key="ModernComboBoxItemStyle">
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="8,6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryLightBrush}" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#EDE7F6" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#EDE7F6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define the ModernToggleButton style -->
            <Style TargetType="{x:Type ToggleButton}" x:Key="ModernToggleButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Border x:Name="Track"
                                        CornerRadius="10"
                                        Background="#E0E0E0"
                                        Width="50"
                                        Height="24">
                                </Border>
                                <Ellipse x:Name="Thumb"
                                         Fill="White"
                                         Width="18"
                                         Height="18"
                                         HorizontalAlignment="Left"
                                         Margin="3,0,0,0"
                                         VerticalAlignment="Center">
                                    <Ellipse.Effect>
                                        <DropShadowEffect ShadowDepth="1"
                                                          BlurRadius="2"
                                                          Opacity="0.2"
                                                          Direction="270" />
                                    </Ellipse.Effect>
                                </Ellipse>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Track" Property="Background" Value="{StaticResource PrimaryBrush}" />
                                    <Setter TargetName="Thumb" Property="Margin" Value="29,0,0,0" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Thumb" Property="Fill" Value="#F5F5F5" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Track" Property="Background" Value="#BDBDBD" />
                                    <Setter TargetName="Thumb" Property="Fill" Value="#E0E0E0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define the ModernCheckBox style -->
            <Style TargetType="CheckBox" x:Key="ModernCheckBoxStyle">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="Border"
                                        Width="20"
                                        Height="20"
                                        CornerRadius="2"
                                        Background="White"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource DividerBrush}"
                                        Margin="0,0,8,0">
                                    <Path x:Name="CheckMark"
                                          Stroke="White"
                                          StrokeThickness="2"
                                          Data="M4,10 L8,14 L16,4"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Visibility="Collapsed" />
                                </Border>
                                <ContentPresenter Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryBrush}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#F5F5F5" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DividerBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define TextBox style -->
            <Style TargetType="{x:Type TextBox}" x:Key="ModernTextBoxStyle">
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="{StaticResource DividerBrush}" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="Padding" Value="8,8,8,4" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryBrush}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryBrush}" />
                                    <Setter Property="BorderThickness" TargetName="border" Value="0,0,0,2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define Label style -->
            <Style TargetType="{x:Type Label}" x:Key="ModernLabelStyle">
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0,0,0,4" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <!-- Define Heading style -->
            <Style TargetType="{x:Type TextBlock}" x:Key="HeadingStyle">
                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="Margin" Value="0,0,0,16" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <!-- Define SubHeading style -->
            <Style TargetType="{x:Type TextBlock}" x:Key="SubHeadingStyle">
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Margin" Value="0,0,0,12" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <domain:VMConvertObject />
    </Window.DataContext>

    <Window.Content>
        <Grid Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>
            <FrameworkElement x:Name="DataContextProxy" DataContext="{Binding}" />

            <!-- Header Section với các CheckBox và ComboBox -->
            <Border Grid.Row="0"
                    BorderThickness="0,0,0,1"
                    BorderBrush="#E0E0E0"
                    Padding="10,5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <!-- MEP Section -->
                    <CheckBox Grid.Column="0" Grid.Row="1"
                              Margin="10,5,15,5"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Content="{Binding SelectCategoryMep}"
                              Style="{StaticResource ModernCheckBoxStyle}"
                              IsChecked="{Binding FlagCheckedMEP, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                    </CheckBox>

                    <ComboBox Grid.Column="1" Grid.Row="1"
                              Name="cb_Mep"
                              Margin="0,5,10,5"
                              IsReadOnly="True"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              ItemsSource="{Binding TargetObjsMEP, UpdateSourceTrigger=PropertyChanged}"
                              SelectedIndex="0"
                              DropDownClosed="ComboBox_DropDownClosed"
                              DropDownOpened="ComboBox_DropDownOpened"
                              Style="{StaticResource ModernComboBoxStyle}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="-- オブジェクトのタイプを選択する --"
                                               Foreground="#9E9E9E"
                                               VerticalAlignment="Center"
                                               Visibility="{Binding VisibilityHint, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Style="{StaticResource ModernCheckBoxStyle}"
                                              HorizontalContentAlignment="Stretch"
                                              IsChecked="{Binding IsChecked}"
                                              Content="{Binding Content}"
                                              Visibility="{Binding VisibilityTarget, UpdateSourceTrigger=PropertyChanged}"
                                              VerticalAlignment="Center"
                                              MinWidth="200">
                                    </CheckBox>
                                </Grid>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>

                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ModernComboBoxItemStyle}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>

                    <Grid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
                        <Button Style="{StaticResource ModernButtonStyle}" Margin="0,5,0,5"
                                Content="Select IFC convert rule file"
                                Click="Button_Click">
                        </Button>
                    </Grid>
                </Grid>
            </Border>

            <!-- DataGrid Section -->
            <Border Grid.Row="1"
                    Margin="10,5"
                    BorderThickness="1"
                    BorderBrush="#E0E0E0"
                    CornerRadius="4">
                <DataGrid Name="dgvLinkIFCs"
                          ItemsSource="{Binding LinkIFCs, UpdateSourceTrigger=PropertyChanged}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          SelectionMode="Single"
                          CanUserResizeColumns="False"
                          CanUserDeleteRows="False"
                          CanUserResizeRows="False"
                          BorderThickness="0"
                          Padding="0"
                          Style="{StaticResource ModernDataGridStyle}">

                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="60">
                            <DataGridTemplateColumn.Header>
                                <Border Background="Transparent" Padding="0,5">
                                    <CheckBox Style="{StaticResource ModernCheckBoxStyle}"
                                              IsChecked="{Binding DataContext.IsAllItems1Selected, Source={x:Reference DataContextProxy}}"
                                              HorizontalAlignment="Center">
                                    </CheckBox>
                                </Border>
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource ModernCheckBoxStyle}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="0,8,0,0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn
                            Header="Link IFC Name"
                            Width="*"
                            CanUserSort="False"
                            IsReadOnly="True"
                            Binding="{Binding LinkIFCName}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Padding" Value="8,0,0,0" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Border>

            <!-- Button Section -->
            <Border Grid.Row="2"
                    BorderThickness="0,1,0,0"
                    BorderBrush="#E0E0E0"
                    Background="#F9F9F9">
                <StackPanel VerticalAlignment="Center"
                            Orientation="Horizontal"
                            FlowDirection="RightToLeft"
                            Margin="10,0">
                    <Button Height="36" Width="100" Margin="10,0,0,0"
                            Style="{StaticResource ModernButtonStyle}"
                            Content="Cancel"
                            Command="{Binding CancelCommand}"
                            CommandParameter="{Binding ElementName=IFCConvertDialog}">
                    </Button>

                    <Button Height="36" Width="100" Margin="10,0,0,0"
                            Style="{StaticResource ModernButtonStyle}"
                            Content="Convert"
                            Command="{Binding ApplyCommand}"
                            CommandParameter="{Binding ElementName=IFCConvertDialog}">
                    </Button>
                </StackPanel>
            </Border>
        </Grid>
    </Window.Content>
</Window>