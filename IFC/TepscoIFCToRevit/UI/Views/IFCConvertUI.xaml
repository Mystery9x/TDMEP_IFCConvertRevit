<Window x:Class="TepscoIFCToRevit.UI.Views.IFCConvertUI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TepscoIFCToRevit.UI.Views"
        mc:Ignorable="d"
        xmlns:domain="clr-namespace:TepscoIFCToRevit.UI.ViewModels"
        Name ="IFCConvertDialog"
        Title="{Binding Tille}"
        Height="500" Width="450"
        MinHeight="500"
        MinWidth="450"
        KeyDown="IFCConvertDlg_KeyDown"
        Closed="IFCConvertDlg_Closed"
        FontSize="12"
        WindowStartupLocation="CenterScreen"
        Background="WhiteSmoke">

    <Window.Resources>
        <ResourceDictionary>
            <!-- Define the NormalButtonStyle style -->
            <Style x:Key="NormalButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#607d8b" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#607d8b" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="10,5" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#78909C" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#78909C" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define the DataGrid style -->
            <Style x:Key="NormalDataGridStyle" TargetType="DataGrid">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="BorderBrush" Value="DarkGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="RowBackground" Value="White" />
                <Setter Property="AlternatingRowBackground" Value="#F0F0F0" />
                <Setter Property="HorizontalGridLinesBrush" Value="DarkGray" />
                <Setter Property="VerticalGridLinesBrush" Value="DarkGray" />
                <Setter Property="RowHeaderWidth" Value="0" />
                <Setter Property="ColumnHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Padding" Value="10,5" />
                            <Setter Property="BorderBrush" Value="DarkGray" />
                            <Setter Property="BorderThickness" Value="0 0 0 1" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Height" Value="30" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                        <Grid Background="{TemplateBinding Background}">
                                            <ContentPresenter VerticalAlignment="Center" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#cfcfcf" />
                                    <Setter Property="Foreground" Value="black" />
                                    <Setter Property="BorderBrush" Value="DarkGray" />
                                    <Setter Property="BorderThickness" Value="1" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define the ComboBoxToggleItem style -->
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border
            x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="0"
            Background="Transparent"
            BorderBrush="Black"
            BorderThickness="0 0 0 1" />

                    <Path
            x:Name="Arrow"
            Grid.Column="1"
            Fill="Black"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Border" Property="Background" Value="Transparent" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="DarkGray" />
                        <Setter Property="Foreground" Value="DarkGray" />
                        <Setter TargetName="Arrow" Property="Fill" Value="DarkGray" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- Define the ComboBoxTextBox style -->
            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            </ControlTemplate>

            <!-- Define the ComboBox style -->
            <Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxStyle">
                <Setter Property="Foreground" Value="{Binding ForeGroundColor}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="BorderThickness" Value="0 0 0 1" />
                <Setter Property="BorderBrush" Value="DarkGray" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="MaxDropDownHeight" Value="300" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton
                        Name="ToggleButton"
                        Template="{StaticResource ComboBoxToggleButton}"
                        Grid.Column="2"
                        Focusable="false"
                        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                        ClickMode="Press">
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="3,3,30,3"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left" MaxWidth="300" />
                                <TextBox x:Name="PART_EditableTextBox"
                             Style="{x:Null}"
                             Template="{StaticResource ComboBoxTextBox}"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Stretch"
                             Margin="3,3,30,3"
                             Focusable="True"
                             Background="Transparent"
                             Foreground="Black"
                             Visibility="Hidden"
                             TextWrapping="Wrap"
                             IsReadOnly="{TemplateBinding IsReadOnly}" />
                                <Popup
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True"
                        Focusable="False"
                        PopupAnimation="Slide"
                        Width="Auto">

                                    <Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border
                                x:Name="DropDownBorder"
                                Background="White"
                                BorderThickness="1"
                                BorderBrush="Black" />
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#888888" />
                                    <Setter Property="BorderThickness" Value="0 0 0 1" />
                                    <Setter Property="BorderBrush" Value="#888888" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderThickness" Value="0 0 0 1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                                </Trigger>
                                <Trigger Property="IsEditable"  Value="true">
                                    <Setter Property="IsTabStop" Value="false" />
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define the ComboBoxItem style -->
            <Style TargetType="{x:Type ComboBoxItem}" x:Key="comboBoxItemStyle">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border x:Name="Border" Background="White" BorderBrush="Gray" BorderThickness="0,0,0,1">
                                <TextBlock Text="{Binding ParamName}" Padding="5" Foreground="{Binding ForeGroundColor}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define the ToggleButton style -->
            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Viewbox>
                                <Border x:Name="Border" CornerRadius="10"
                            Background="#FFFFFFFF"
                            Width="40" Height="20">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0.5" Direction="0" Opacity="0.3" />
                                    </Border.Effect>
                                    <Ellipse x:Name="Ellipse" Fill="#FFFFFFFF" Stretch="Uniform"
                                 Margin="2 1 2 1"
                                 Stroke="Gray" StrokeThickness="0.2"
                                 HorizontalAlignment="Stretch">
                                        <Ellipse.Effect>
                                            <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.3" Direction="260" />
                                        </Ellipse.Effect>
                                    </Ellipse>
                                </Border>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#607d8b"
                                            Duration="0:0:0.1" />
                                            <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                Storyboard.TargetProperty="Margin"
                                                To="20 1 2 1"
                                                Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="White"
                                            Duration="0:0:0.1" />
                                            <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                Storyboard.TargetProperty="Margin"
                                                To="2 1 0 1"
                                                Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define the CheckkBox style -->
            <Style TargetType="CheckBox" x:Key="checkBoxStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Border Background="Transparent"
                                    Width="auto" Height="auto"
                                    BorderThickness="0" Margin="0">
                                <StackPanel Orientation="Horizontal">
                                    <Border Name="border"
                                        BorderThickness="1"
                                        BorderBrush="Gray"
                                        Width="14"
                                        Height="14"
                                        Background="{TemplateBinding Background}">
                                        <Path Name="checkMark"
                                          Data="M0,5 L2,7 L7,0"
                                          Stroke="Transparent"
                                          StrokeThickness="1" />
                                    </Border>
                                    <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Center" Margin="5" />
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#607d8b" />
                                    <Setter TargetName="checkMark" Property="Stroke" Value="White" />
                                    <Setter TargetName="checkMark" Property="VerticalAlignment" Value="Center" />
                                    <Setter TargetName="checkMark" Property="HorizontalAlignment" Value="Center" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="checkMark" Property="Stroke" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <domain:VMConvertObject />
    </Window.DataContext>

    <Window.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="80" />
                <RowDefinition />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <FrameworkElement x:Name="DataContextProxy" DataContext="{Binding}" />

            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <CheckBox  Grid.Column="0" Grid.Row="0"
                           Margin="5,0,5,0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Content="{Binding SelectCategoryMep}"
                           Style="{StaticResource checkBoxStyle}"
                           IsChecked="{Binding FlagCheckedMEP, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                </CheckBox>

                <ComboBox Grid.Column="1" Grid.Row="0"
                          Name ="cb_Mep"  Margin="5,0,5,0"
                          IsReadOnly="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding TargetObjsMEP, UpdateSourceTrigger=PropertyChanged}"
                          SelectedIndex="0"
                          DropDownClosed="ComboBox_DropDownClosed"
                          DropDownOpened="ComboBox_DropDownOpened"
                          Style="{StaticResource ComboBoxStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Text="-- オブジェクトのタイプを選択する --" Foreground="Gray" VerticalAlignment="Center"
                                           Visibility="{Binding VisibilityHint, UpdateSourceTrigger=PropertyChanged}" />
                                <CheckBox Style="{StaticResource checkBoxStyle}"
                                          HorizontalContentAlignment="Stretch"
                                          IsChecked="{Binding IsChecked }"
                                          Content="{Binding Content}"
                                          Visibility="{Binding VisibilityTarget, UpdateSourceTrigger=PropertyChanged}"
                                          VerticalAlignment="Stretch" MinWidth="200">
                                </CheckBox>
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>

                <CheckBox  Grid.Column="0" Grid.Row="1"
                           Margin="5,0,5,0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Content="{Binding SelectCategoryStructure}"
                           Style="{StaticResource checkBoxStyle}"
                           IsChecked="{Binding FlagCheckedStructural, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                </CheckBox>

                <ComboBox Grid.Column="1" Grid.Row="1"
                          Name ="cb_Structural" Margin="5,0,5,0"
                          IsReadOnly="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding TargetObjsStructural, UpdateSourceTrigger=PropertyChanged}"
                          SelectedIndex="0"
                          DropDownClosed="ComboBox_DropDownClosed"
                          DropDownOpened="ComboBox_DropDownOpened"
                          Style="{StaticResource ComboBoxStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Text="-- オブジェクトのタイプを選択する --" Foreground="Gray" VerticalAlignment="Center"
                                           Visibility="{Binding VisibilityHint, UpdateSourceTrigger=PropertyChanged}" />
                                <CheckBox Style="{StaticResource checkBoxStyle}"
                                          HorizontalContentAlignment="Stretch"
                                          IsChecked="{Binding IsChecked }"
                                          Content="{Binding Content}"
                                          Visibility="{Binding VisibilityTarget, UpdateSourceTrigger=PropertyChanged}"
                                          VerticalAlignment="Stretch" MinWidth="200">
                                </CheckBox>
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            </Grid>

            <Grid Grid.Row="1">
                <DataGrid Grid.Row="1" Margin="5" Padding="0"
                          Name="dgvLinkIFCs"
                          ItemsSource="{Binding LinkIFCs, UpdateSourceTrigger=PropertyChanged}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          SelectionMode="Single"
                          CanUserResizeColumns="False"
                          CanUserDeleteRows="False"
                          CanUserResizeRows="False"
                          Style="{StaticResource NormalDataGridStyle}">

                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <Border Background="Transparent">
                                    <CheckBox
                                        IsChecked="{Binding DataContext.IsAllItems1Selected, Source={x:Reference DataContextProxy}}">
                                    </CheckBox>
                                </Border>
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid Margin="10 7 10 0" Width="50" Height="50">
                                        <CheckBox IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                  HorizontalAlignment="Center"
                                                  HorizontalContentAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn
                            Header="IFC 名をリンク"
                            Width="*" CanUserSort="False"
                            IsReadOnly="True"
                            Binding="{Binding LinkIFCName}">
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

            <StackPanel Grid.Row="2"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        FlowDirection="RightToLeft"
                        Width="Auto">
                <Button Height="30" Width="80" Margin="5"
                        Style="{StaticResource NormalButtonStyle}"
                        Content="{Binding CancelContent}"
                        Command="{Binding CancelCommand}"
                        CommandParameter="{Binding ElementName=IFCConvertDialog}"
                        FontSize="12">
                </Button>

                <Button Height="30" Width="80" Margin="5"
                        Style="{StaticResource NormalButtonStyle}"
                        Content="{Binding OkContent}"
                        Command="{Binding ApplyCommand}"
                        CommandParameter="{Binding ElementName=IFCConvertDialog}"
                        FontSize="12">
                </Button>
            </StackPanel>
        </Grid>
    </Window.Content>
</Window>