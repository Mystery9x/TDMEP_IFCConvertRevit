<Window x:Class="TepscoIFCToRevit.UI.Views.ShowDialogUI.ConvertManagerUI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TepscoIFCToRevit.UI.Views.ShowDialogUI"
        mc:Ignorable="d" Height="500" MinHeight="300" MinWidth="600" Width="600"
        WindowStartupLocation="CenterScreen" KeyDown="Window_KeyDown"
        Name="mainWindow" Title="変換されたオブジェクトリスト">

    <Window.Resources>
        <ResourceDictionary>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="True" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Height" Value="10" />
                        <Setter Property="MinHeight" Value="10" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="10" />
                        <Setter Property="MinWidth" Value="10" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TabItemStyle" TargetType="TabItem">
                <Setter Property="Header" Value="{Binding NameCategory}" />
                <Setter Property="Height" Value="Auto" />
                <!--<Setter Property="FontSize" Value="13" />-->
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Padding" Value="10,5,10,5" />
                <Setter Property="Background" Value="#607d8b" />
                <Setter Property="Foreground" Value="#f2f4f5" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#607d8b" />
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="#607d8b" />
                        <Setter Property="Background" Value="#607d8b" />
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Define the NormalButtonStyle style -->
            <Style x:Key="NormalButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#607d8b" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#607d8b" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             CornerRadius="2">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#78909C" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#78909C" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Background="White" Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>

        <TabControl Grid.Row="0" Name="TCRule"
                    HorizontalContentAlignment="Left"
                    ItemsSource="{Binding Rules, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    SelectedItem="{Binding RuleSel, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    FontSize="13">

            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem" BasedOn="{StaticResource TabItemStyle}" />
            </TabControl.ItemContainerStyle>

            <TabControl.ContentTemplate>
                <DataTemplate>
                    <local:RuleView />
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="1" Content="インポート" Margin="5"
                    Height="30"  Width="90"
                    Visibility="{Binding VisibleBtnImport}"
                    FontSize="12" Command="{Binding ImportCommand}"
                    Style="{StaticResource NormalButtonStyle}"
                    CommandParameter="{Binding ElementName=mainWindow}" />

            <Button Grid.Column="2" Content="エクスポート" Margin="5"
                    Height="30"  Width="90"
                    FontSize="12" Command="{Binding ExportCommand}"
                    Style="{StaticResource NormalButtonStyle}"
                    CommandParameter="{Binding ElementName=mainWindow}" />

            <Button Grid.Column="3" Content="表示" Margin="5"
                    Height="30"  Width="90"
                    Style="{StaticResource NormalButtonStyle}"
                    FontSize="12" Command="{Binding ShowElementInRevitCommand}"
                    CommandParameter="{Binding ElementName=mainWindow}" />

            <Button Grid.Column="4" Content="閉じる" Margin="5"
                    Height="30"  Width="90"
                    FontSize="12" Click="CloseButton"
                    Style="{StaticResource NormalButtonStyle}"
                    CommandParameter="{Binding ElementName=mainWindow}" />
        </Grid>
    </Grid>
</Window>