<UserControl x:Class="TepscoIFCToRevit.UI.Views.ShowDialogUI.RuleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:TepscoIFCToRevit.UI.Views.ShowDialogUI"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:localConverter="clr-namespace:TepscoIFCToRevit.UI.ViewModels.Converter"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             Height="Auto" Width="Auto">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />

                <ResourceDictionary>
                    <localConverter:RadioBoolToIntConverter x:Key="radioBoolToIntConverter" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
                <Border>
                    <Image Name="buttonImage"
                       Source="{Binding ToggleButtonImage}"
                       RenderOptions.BitmapScalingMode="HighQuality" />
                </Border>
            </ControlTemplate>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="True" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Height" Value="10" />
                        <Setter Property="MinHeight" Value="10" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="10" />
                        <Setter Property="MinWidth" Value="10" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Custom Style for RadioButton -->
            <Style TargetType="RadioButton" x:Key="CustomRadioButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="OuterCircle"
                                        Width="15" Height="15"
                                        CornerRadius="10"
                                        BorderBrush="#78909C"
                                        BorderThickness="0"
                                        Background="White"
                                        Margin="5,0,0,0">
                                    <Border x:Name="InnerCircle"
                                            Width="10" Height="10"
                                            CornerRadius="5"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Background="#78909C"
                                            Visibility="Hidden" />
                                </Border>
                                <ContentPresenter Margin="5,0,5,0" VerticalAlignment="Center" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="InnerCircle" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="OuterCircle" Property="BorderThickness" Value="1.5" />
                                    <Setter TargetName="OuterCircle" Property="Width" Value="17" />
                                    <Setter TargetName="OuterCircle" Property="Height" Value="17" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="InnerCircle" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Define the DataGrid style -->
            <Style x:Key="NormalDataGridStyle" TargetType="DataGrid">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="RowBackground" Value="White" />
                <Setter Property="AlternatingRowBackground" Value="#F0F0F0" />
                <Setter Property="HorizontalGridLinesBrush" Value="Gray" />
                <Setter Property="VerticalGridLinesBrush" Value="Gray" />
                <Setter Property="ColumnHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="Padding" Value="10,5" />
                            <Setter Property="BorderThickness" Value="0,0,1,1" />
                            <Setter Property="BorderBrush" Value="Gray" />
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter Property="BorderThickness" Value="0,0,1,1" />
                            <Setter Property="Background" Value="White" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Gray" />
                                    <Setter Property="Foreground" Value="Gray" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <DropShadowEffect x:Key="MyShadowEffect"
                  Color="Black"
                  Direction="320"
                  ShadowDepth="5"
                  BlurRadius="10"
                  Opacity="0.5" />

            <Style TargetType="Expander">
                <Setter Property="Foreground" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Expander">
                            <Border BorderBrush="Gray">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40" />
                                        <RowDefinition Name="ContentRow" Height="0" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Border Name="headerBorder"
                                            BorderBrush="Gray"
                                            BorderThickness="0,0,0,1"
                                            VerticalAlignment="Center"
                                            Background="#607D8B" Padding="10"
                                            Effect="{StaticResource MyShadowEffect}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                                                <TextBlock Text="カウント: " Foreground="White" />
                                                <TextBlock Text="{Binding CountLstElement}" Foreground="White" />
                                            </StackPanel>

                                            <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal">
                                                <TextBlock Text="ステータス: " Foreground="White" />

                                                <RadioButton Content="成功" Foreground="White" Background="White"
                                                         Style="{StaticResource CustomRadioButtonStyle}"
                                                         Name="rdbSuccess" IsChecked="{Binding ShowSuccess, Converter={StaticResource ResourceKey=radioBoolToIntConverter}, ConverterParameter=True}"
                                                         GroupName="statusGroup" Margin="5 0 0 0" />
                                                <RadioButton Content="失敗" Foreground="White" Background="White"
                                                         Style="{StaticResource CustomRadioButtonStyle}"
                                                         Name="rdbFailed" IsChecked="{Binding ShowSuccess, Converter={StaticResource ResourceKey=radioBoolToIntConverter}, ConverterParameter=False}"
                                                         GroupName="statusGroup" Margin="5 0 0 0" />
                                            </StackPanel>

                                            <ToggleButton Grid.Column="2" Grid.Row="0" BorderBrush="Gray" RenderTransformOrigin="0.5,0.5"
                                                    Template="{StaticResource ExpanderToggleButton}"
                                                    Width="20" Height="20" OverridesDefaultStyle="True"
                                                    IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="ToggleButton">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="RenderTransform">
                                                                    <Setter.Value>
                                                                        <TransformGroup>
                                                                            <RotateTransform Angle="180" />
                                                                        </TransformGroup>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="False">
                                                                <Setter Property="RenderTransform">
                                                                    <Setter.Value>
                                                                        <TransformGroup>
                                                                            <RotateTransform Angle="0" />
                                                                        </TransformGroup>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                        </Grid>
                                    </Border>

                                    <Border Name="contentBorder"
                                            Grid.Row="1"
                                            BorderBrush="Transparent">
                                        <ContentPresenter />
                                    </Border>

                                    <Border Grid.Row="2"
                                            BorderBrush="Transparent"
                                            Visibility="{Binding VisibilityNoData}"
                                            Height="auto">
                                        <TextBlock Text="検索結果はありません..." FontSize="24"
                                                   Foreground="#cccccc" VerticalAlignment="Center"
                                                   HorizontalAlignment="Center" />
                                    </Border>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter TargetName="ContentRow" Property="Height"
                                    Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="IsExpanded" Value="True" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Expander>
        <Grid>
            <DataGrid Grid.Row="1" Background="Transparent"
                    Name="ElementDataGridSuccess"
                    BorderThickness="0" MinHeight="200"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    FontSize="12"
                    CanUserDeleteRows="False"
                    CanUserAddRows="False"
                    CanUserReorderColumns="False" IsReadOnly="True"
                    CanUserResizeRows="False" CanUserResizeColumns="False"
                    ColumnWidth="100" SelectionMode="Single" SelectionUnit="FullRow"
                    AutoGeneratingColumn="DbMainTable_AutoGeneratingColumn"
                    RowHeaderWidth="0"
                    materialDesign:DataGridAssist.SelectedCellBorderBrush="Transparent"
                    ItemsSource="{Binding DisplayLstElement, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    SelectedItem="{Binding SelElement, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.ItemTemplate>
                    <DataTemplate>
                        <local:ElementView />
                    </DataTemplate>
                </DataGrid.ItemTemplate>
            </DataGrid>
        </Grid>
    </Expander>
</UserControl>