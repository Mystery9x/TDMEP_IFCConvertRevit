<UserControl x:Class="TepscoIFCToRevit.UI.Views.SettingGroupUI.GroupSelectionUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:TepscoIFCToRevit.UI.Views.SettingGroupUI"
             xmlns:localConverter="clr-namespace:TepscoIFCToRevit.UI.ViewModels.Converter"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <Style TargetType="Button" x:Key="SquareButton">
                        <Setter Property="Margin" Value="0,0,5,0" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="Width" Value="30" />
                        <Setter Property="Height" Value="30" />
                    </Style>

                    <Color x:Key="ButtonBackgroundColor">#607d8b</Color>
                    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource ButtonBackgroundColor}" />
                    <localConverter:RelativeWidthCoverter x:Key="relativeWidthConverter" />

                    <!-- Define the ComboBoxToggleItem style -->
                    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border
            x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="0"
            Background="Transparent"
            BorderBrush="Black"
            BorderThickness="0 0 0 1" />

                            <Path
            x:Name="Arrow"
            Grid.Column="1"
            Fill="Black"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="DarkGray" />
                                <Setter Property="Foreground" Value="DarkGray" />
                                <Setter TargetName="Arrow" Property="Fill" Value="DarkGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <!-- Define the ComboBoxTextBox style -->
                    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
                    </ControlTemplate>

                    <!-- Define the ComboBox style -->
                    <Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxStyle">
                        <Setter Property="Foreground" Value="{Binding ForeGroundColor}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="FontWeight" Value="Medium" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="BorderBrush" Value="DarkGray" />
                        <Setter Property="BorderThickness" Value="0 0 0 1" />
                        <Setter Property="Margin" Value="5" />
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                        <Setter Property="MaxDropDownHeight" Value="300" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                    <Grid>
                                        <ToggleButton
                                            Name="ToggleButton"
                                            Template="{StaticResource ComboBoxToggleButton}"
                                            Grid.Column="2"
                                            Focusable="false"
                                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press">
                                        </ToggleButton>
                                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                                          Content="{TemplateBinding SelectionBoxItem}"
                                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                          Margin="3,3,30,3"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Left" />
                                        <TextBox x:Name="PART_EditableTextBox"
                                                 Style="{x:Null}"
                                                 Template="{StaticResource ComboBoxTextBox}"
                                                 HorizontalAlignment="Left"
                                                 VerticalAlignment="Center"
                                                 Margin="3,3,30,3"
                                                 Focusable="True"
                                                 Background="Transparent"
                                                 Foreground="Black"
                                                 Visibility="Hidden"
                                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                                        <Popup
                                            Name="Popup"
                                            Placement="Bottom"
                                            IsOpen="{TemplateBinding IsDropDownOpen}"
                                            AllowsTransparency="True"
                                            Focusable="False"
                                            PopupAnimation="Slide">

                                            <Grid Name="DropDown"
                                                  SnapsToDevicePixels="True"
                                                  MinWidth="{TemplateBinding ActualWidth}"
                                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                <Border
                                                    x:Name="DropDownBorder"
                                                    Background="White"
                                                    BorderThickness="1"
                                                    BorderBrush="Black" />
                                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="#888888" />
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="true">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                        </Trigger>
                                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                                        </Trigger>
                                        <Trigger Property="IsEditable"  Value="true">
                                            <Setter Property="IsTabStop" Value="false" />
                                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Define the ComboBoxItem style -->
                    <Style TargetType="{x:Type ComboBoxItem}" x:Key="comboBoxItemStyle">
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border x:Name="Border" Background="White" BorderBrush="Gray" BorderThickness="0,0,0,1">
                                        <TextBlock Text="{Binding ParamName}" Padding="5" Foreground="{Binding ForeGroundColor}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Define the DataGrid style -->
                    <Style x:Key="NormalDataGridStyle" TargetType="DataGrid">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="BorderBrush" Value="DarkGray" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="RowBackground" Value="White" />
                        <Setter Property="AlternatingRowBackground" Value="#F0F0F0" />
                        <Setter Property="HorizontalGridLinesBrush" Value="DarkGray" />
                        <Setter Property="VerticalGridLinesBrush" Value="DarkGray" />
                        <Setter Property="RowHeaderWidth" Value="0" />
                        <Setter Property="ColumnHeaderStyle">
                            <Setter.Value>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="Padding" Value="10,5" />
                                    <Setter Property="BorderBrush" Value="DarkGray" />
                                    <Setter Property="BorderThickness" Value="0 0 0 1" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="CellStyle">
                            <Setter.Value>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Height" Value="50" />
                                    <Setter Property="BorderBrush" Value="DarkGray" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="white" />
                                            <Setter Property="Foreground" Value="black" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Define the NormalButtonStyle style -->
                    <Style x:Key="NormalButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="#607d8b" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderBrush" Value="#607d8b" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="10,5" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="Width" Value="30" />
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="2">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#78909C" />
                                            <Setter Property="Foreground" Value="White" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="#78909C" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}},
                  Path=ActualWidth,Converter={StaticResource relativeWidthConverter}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="40" />
            <ColumnDefinition Width="0.75*" />
        </Grid.ColumnDefinitions>

        <DataGrid Grid.Column="0" Name="dgvSetting"
            Margin="0,5,0,5" AutoGenerateColumns="False"
            BorderThickness="1" BorderBrush="Gray"
            Style="{StaticResource NormalDataGridStyle}"
            SelectedItem="{Binding SelObj ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            ItemsSource="{Binding SettingObjs, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            CanUserResizeColumns="False"
            CanUserReorderColumns="False"
            CanUserDeleteRows="False"
            CanUserAddRows ="False"
            SelectionMode="Extended"
            PreviewMouseLeftButtonDown ="dgvSetting_PreviewMouseLeftButtonDown">

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="選択" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Height="30" Width="100" FontSize="12"
                                    Content="エレメント選択" Padding="0"
                                    Command="{Binding SelectElementCommand}"
                                    CommandParameter="{Binding ElementName=dgvSetting}"
                                    Style="{StaticResource NormalButtonStyle}"
                                    Margin="5,0,5,0">
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="選択された要素の数" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding CountElementSelected}" Margin="10 0 0 0" FontSize="13" Padding="0"
                                       VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Label Grid.Column="1" Content="及び"
               HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
               VerticalAlignment="Stretch" VerticalContentAlignment="Center"
               Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGrid}},Path=ActualHeight}"
               BorderBrush="Gray" BorderThickness="1" Margin="0,5,0,5">
        </Label>

        <DataGrid Grid.Column="2" Name="dgvType"
                Margin="0,5,0,5" AutoGenerateColumns="False"
                BorderThickness="1"
                BorderBrush="Gray" Loaded="dgvType_Loaded"
                Style="{StaticResource NormalDataGridStyle}"
                ItemsSource="{Binding SettingTypeItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGrid}},Path=ActualHeight}"
                VerticalContentAlignment="Center"
                CanUserDeleteRows="False"
                CanUserResizeColumns="False"
                CanUserReorderColumns="False"
                CanUserAddRows ="False"
                SelectionMode="Extended"
                PreviewMouseLeftButtonDown="dgvType_PreviewMouseLeftButtonDown">

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="家族" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                Style="{StaticResource ComboBoxStyle}"
                                ItemsSource="{Binding Families, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                SelectedItem="{Binding SelectedFamily , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="タイプ" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                Style="{StaticResource ComboBoxStyle}"
                                SelectedItem="{Binding SelectedSymbol, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                ItemsSource="{Binding SettingSymbolObjs, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                IsEnabled="{Binding IsEnableSymbol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>